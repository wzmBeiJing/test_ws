<sdf version='1.6'>
  <model name='Uqtr_Robot'>
    <link name='base_link'>
      <pose frame=''>0 0 0 0 -0 0</pose>
      <inertial>
        <pose frame=''>0.001632 0.000661 0.002976 0 -0 0</pose>
        <mass>50.0764</mass>
        <inertia>
          <ixx>1.17773</ixx>
          <ixy>-0.15037</ixy>
          <ixz>0.0670675</ixz>
          <iyy>4.92287</iyy>
          <iyz>-0.00928362</iyz>
          <izz>5.70125</izz>
        </inertia>
      </inertial>
      <collision name='base_link_fixed_joint_lump__chassis_collision'>
        <pose frame=''>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://Uqtr_Robot/meshes/chassis.dae</uri>
          </mesh>
        </geometry>
        <surface>
          <contact>
            <ode/>
          </contact>
          <friction>
            <ode>
              <mu>0</mu>
              <mu2>0</mu2>
            </ode>
          </friction>
        </surface>
      </collision>
      <collision name='base_link_fixed_joint_lump__adis1647x_pcb_collision_1'>
        <pose frame=''>0 0 0.00122 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://Uqtr_Robot/meshes/adis1647x_pcb.STL</uri>
          </mesh>
        </geometry>
      </collision>
      <collision name='base_link_fixed_joint_lump__capteur_laser_arriere_collision_2'>
        <pose frame=''>-0.76419 -0.351 0.28335 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://Uqtr_Robot/meshes/capteur_laser_arriere.STL</uri>
          </mesh>
        </geometry>
        <surface>
          <contact>
            <ode/>
          </contact>
          <friction>
            <ode/>
          </friction>
        </surface>
      </collision>
      <collision name='base_link_fixed_joint_lump__capteur_laser_avant_collision_3'>
        <pose frame=''>0.76419 0.351 0.28335 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://Uqtr_Robot/meshes/capteur_laser_avant.STL</uri>
          </mesh>
        </geometry>
        <surface>
          <contact>
            <ode/>
          </contact>
          <friction>
            <ode/>
          </friction>
        </surface>
      </collision>
      <visual name='base_link_fixed_joint_lump__chassis_visual'>
        <pose frame=''>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://Uqtr_Robot/meshes/chassis.dae</uri>
          </mesh>
        </geometry>
        <material>
          <script>
            <uri>__default__</uri>
            <name>__default__</name>
          </script>
        </material>
      </visual>
      <visual name='base_link_fixed_joint_lump__adis1647x_pcb_visual_1'>
        <pose frame=''>0 0 0.00122 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://Uqtr_Robot/meshes/adis1647x_pcb.STL</uri>
          </mesh>
        </geometry>
      </visual>
      <visual name='base_link_fixed_joint_lump__capteur_laser_arriere_visual_2'>
        <pose frame=''>-0.76419 -0.351 0.28335 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://Uqtr_Robot/meshes/capteur_laser_arriere.STL</uri>
          </mesh>
        </geometry>
        <material>
          <script>
            <name>Gazebo/Yellow</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>
      <visual name='base_link_fixed_joint_lump__capteur_laser_avant_visual_3'>
        <pose frame=''>0.76419 0.351 0.28335 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://Uqtr_Robot/meshes/capteur_laser_avant.STL</uri>
          </mesh>
        </geometry>
        <material>
          <script>
            <name>Gazebo/Yellow</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>
      <velocity_decay/>
      <velocity_decay/>
      <velocity_decay/>
      <velocity_decay/>
      <sensor name='chassis_hokuyo_sensor_arr' type='ray'>
        <visualize>0</visualize>
        <update_rate>20</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>720</samples>
              <resolution>1</resolution>
              <min_angle>-5.67232</min_angle>
              <max_angle>-0.785398</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.1</min>
            <max>40</max>
            <resolution>0.001</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <plugin name='gazebo_ros_head_hokuyo_controller' filename='libgazebo_ros_laser.so'>
          <topicName>/scan_arriere</topicName>
          <frameName>capteur_laser_arriere</frameName>
        </plugin>
        <pose frame=''>-0.76419 -0.351 0.28335 0 -0 0</pose>
      </sensor>
      <velocity_decay/>
      <gravity>1</gravity>
      <velocity_decay/>
      <sensor name='chassis_hokuyo_sensor' type='ray'>
        <visualize>0</visualize>
        <update_rate>20</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>720</samples>
              <resolution>1</resolution>
              <min_angle>-2.35619</min_angle>
              <max_angle>2.35619</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.1</min>
            <max>40</max>
            <resolution>0.1</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <plugin name='gazebo_ros_head_hokuyo_controller' filename='libgazebo_ros_laser.so'>
          <topicName>/scan_avant</topicName>
          <frameName>capteur_laser_avant</frameName>
        </plugin>
        <pose frame=''>0.76419 0.351 0.28335 0 -0 0</pose>
      </sensor>
    </link>
    <link name='roue_motrice_droite'>
      <pose frame=''>0.074873 -0.34278 0.086706 0 -0 0</pose>
      <inertial>
        <pose frame=''>0 0 0 0 -0 0</pose>
        <mass>1.3118</mass>
        <inertia>
          <ixx>0.00367245</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.00367245</iyy>
          <iyz>0</iyz>
          <izz>0.00677057</izz>
        </inertia>
      </inertial>
      <collision name='roue_motrice_droite_collision'>
        <pose frame=''>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://Uqtr_Robot/meshes/roue_motrice_droite.STL</uri>
          </mesh>
        </geometry>
        <surface>
          <contact>
            <ode>
              <kp>1e+06</kp>
              <kd>1</kd>
            </ode>
          </contact>
          <friction>
            <ode>
              <mu>449</mu>
              <mu2>449</mu2>
            </ode>
          </friction>
        </surface>
      </collision>
      <visual name='roue_motrice_droite_visual'>
        <pose frame=''>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://Uqtr_Robot/meshes/roue_motrice_droite.STL</uri>
          </mesh>
        </geometry>
        <material>
          <script>
            <name>Gazebo/Black</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>
      <velocity_decay/>
      <gravity>1</gravity>
      <velocity_decay/>
    </link>
    <joint name='chassis_roue_motrice_droite' type='revolute'>
      <child>roue_motrice_droite</child>
      <parent>base_link</parent>
      <axis>
        <xyz>0 1 0</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics>
          <damping>0</damping>
          <friction>0</friction>
          <spring_reference>0</spring_reference>
          <spring_stiffness>0</spring_stiffness>
        </dynamics>
        <use_parent_model_frame>1</use_parent_model_frame>
      </axis>
    </joint>
    <link name='roue_motrice_gauche'>
      <pose frame=''>0.074873 0.34278 0.086706 0 -0 0</pose>
      <inertial>
        <pose frame=''>0 0 0 0 -0 0</pose>
        <mass>1.3118</mass>
        <inertia>
          <ixx>0.00367245</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.00367245</iyy>
          <iyz>0</iyz>
          <izz>0.00677057</izz>
        </inertia>
      </inertial>
      <collision name='roue_motrice_gauche_collision'>
        <pose frame=''>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://Uqtr_Robot/meshes/roue_motrice_gauche.STL</uri>
          </mesh>
        </geometry>
        <surface>
          <contact>
            <ode>
              <kp>1e+06</kp>
              <kd>1</kd>
            </ode>
          </contact>
          <friction>
            <ode>
              <mu>449</mu>
              <mu2>449</mu2>
            </ode>
          </friction>
        </surface>
      </collision>
      <visual name='roue_motrice_gauche_visual'>
        <pose frame=''>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://Uqtr_Robot/meshes/roue_motrice_gauche.STL</uri>
          </mesh>
        </geometry>
        <material>
          <script>
            <name>Gazebo/Black</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>
      <velocity_decay/>
      <gravity>1</gravity>
      <velocity_decay/>
    </link>
    <joint name='chassis_roue_motrice_gauche' type='revolute'>
      <child>roue_motrice_gauche</child>
      <parent>base_link</parent>
      <axis>
        <xyz>0 1 0</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics>
          <damping>0</damping>
          <friction>0</friction>
          <spring_reference>0</spring_reference>
          <spring_stiffness>0</spring_stiffness>
        </dynamics>
        <use_parent_model_frame>1</use_parent_model_frame>
      </axis>
    </joint>
    <plugin name='imu_plugin' filename='libgazebo_ros_imu.so'>
      <alwaysOn>1</alwaysOn>
      <topicName>imu</topicName>
      <serviceName>imu_service</serviceName>
      <gaussianNoise>0.0</gaussianNoise>
      <updateRate>20.0</updateRate>
      <bodyName>base_link</bodyName>
      <xyzOffset>0 0 -0.00122</xyzOffset>
      <rpyOffset>0 -0 0</rpyOffset>
    </plugin>
    <static>0</static>
    <plugin name='differential_drive_controller' filename='libgazebo_ros_diff_drive.so'>
      <alwaysOn>1</alwaysOn>
      <legacyMode>0</legacyMode>
      <updateRate>100</updateRate>
      <leftJoint>chassis_roue_motrice_gauche</leftJoint>
      <rightJoint>chassis_roue_motrice_droite</rightJoint>
      <wheelSeparation>0.6855600</wheelSeparation>
      <wheelDiameter>0.2032000</wheelDiameter>
      <torque>20</torque>
      <commandTopic>Uqtr_Robot/diff_drive_controller/cmd_vel</commandTopic>
      <odometryTopic>Uqtr_Robot/diff_drive_controller/odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <odometrySource>world</odometrySource>
      <publishOdomTF>0</publishOdomTF>
      <publishTf>1</publishTf>
      <rosDebugLevel>na</rosDebugLevel>
      <robotBaseFrame>base_link</robotBaseFrame>
      <publishWheelTF>1</publishWheelTF>
      <publishWheelJointState>0</publishWheelJointState>
    </plugin>
  </model>
</sdf>
