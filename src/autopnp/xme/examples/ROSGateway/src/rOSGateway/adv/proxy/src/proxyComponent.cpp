/*
 * Copyright (c) 2011-2014, fortiss GmbH.
 * Licensed under the Apache License, Version 2.0.
 *
 * Use, modification and distribution are subject to the terms specified
 * in the accompanying license file LICENSE.txt located at the root directory
 * of this software distribution. A copy is available at
 * http://chromosome.fortiss.org/.
 *
 * This file is part of CHROMOSOME.
 *
 * $Id: proxyComponent.cpp 6356 2014-01-15 16:33:22Z kainz $
 */

/**
 * \file
 *         Source file for proxy component.
 *
 * \author
 *         This file has been generated by the CHROMOSOME Modeling Tool (XMT)
 *         (fortiss GmbH).
 */

/******************************************************************************/
/***   Includes                                                             ***/
/******************************************************************************/
#include "rOSGateway/adv/proxy/include/proxyComponent.h"

// PROTECTED REGION ID(ROSGATEWAY_ADV_PROXY_PROXYCOMPONENT_C_INCLUDES) ENABLED START
#include "xme/hal/include/ros.h"
// PROTECTED REGION END

/******************************************************************************/
/***   Defines                                                              ***/
/******************************************************************************/

// PROTECTED REGION ID(ROSGATEWAY_ADV_PROXY_PROXYCOMPONENT_C_DEFINES) ENABLED START
// PROTECTED REGION END

/******************************************************************************/
/***   Type definitions                                                     ***/
/******************************************************************************/

// PROTECTED REGION ID(ROSGATEWAY_ADV_PROXY_PROXYCOMPONENT_C_TYPE_DEFINITIONS) ENABLED START
// PROTECTED REGION END

/******************************************************************************/
/***   Variables                                                            ***/
/******************************************************************************/

// PROTECTED REGION ID(ROSGATEWAY_ADV_PROXY_PROXYCOMPONENT_C_VARIABLES) ENABLED START
// PROTECTED REGION END

/******************************************************************************/
/***   Prototypes                                                           ***/
/******************************************************************************/

// PROTECTED REGION ID(ROSGATEWAY_ADV_PROXY_PROXYCOMPONENT_C_PROTOTYPES) ENABLED START
// PROTECTED REGION END

/******************************************************************************/
/***   Implementation                                                       ***/
/******************************************************************************/
xme_status_t
rOSGateway_adv_proxy_proxyComponent_init
(
    rOSGateway_adv_proxy_proxyComponent_config_t* const config,
    const char* initializationString
)
{
    // PROTECTED REGION ID(ROSGATEWAY_ADV_PROXY_PROXYCOMPONENT_C_INITIALIZE) ENABLED START
    XME_UNUSED_PARAMETER(initializationString);

    config->response = NULL;

    xme_hal_ros_init();

    return XME_STATUS_SUCCESS;
    // PROTECTED REGION END
}

void
rOSGateway_adv_proxy_proxyComponent_fini
(
    rOSGateway_adv_proxy_proxyComponent_config_t* const config
)
{
    // PROTECTED REGION ID(ROSGATEWAY_ADV_PROXY_PROXYCOMPONENT_C_FINALIZE) ENABLED START
    XME_UNUSED_PARAMETER(config);
    
    xme_hal_ros_fini();
    // PROTECTED REGION END
}

// PROTECTED REGION ID(ROSGATEWAY_ADV_PROXY_PROXYCOMPONENT_C_IMPLEMENTATION) ENABLED START
// PROTECTED REGION END
